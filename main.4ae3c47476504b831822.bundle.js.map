{"version":3,"file":"main.4ae3c47476504b831822.bundle.js","sources":["webpack:///./src/app/components/ConsentBanner/index.jsx"],"sourcesContent":["import React from 'react';\nimport { string, element, bool } from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  C_CONSENT_BACKGROUND,\n  C_CONSENT_ACTION,\n  C_CONSENT_CONTENT,\n  C_WHITE,\n} from '@bbc/psammead-styles/colours';\nimport {\n  GEL_GREAT_PRIMER,\n  GEL_LONG_PRIMER,\n  GEL_FF_REITH_SANS,\n} from '@bbc/gel-foundations/typography';\nimport {\n  GEL_GROUP_3_SCREEN_WIDTH_MIN,\n  GEL_GROUP_2_SCREEN_WIDTH_MIN,\n  GEL_GROUP_5_SCREEN_WIDTH_MIN,\n} from '@bbc/gel-foundations/breakpoints';\nimport {\n  GEL_MARGIN_BELOW_400PX,\n  GEL_MARGIN_ABOVE_400PX,\n  GEL_SPACING_DBL,\n  GEL_SPACING,\n} from '@bbc/gel-foundations/spacings';\n\nconst Wrapper = styled.div`\n  font-family: ${GEL_FF_REITH_SANS};\n  background-color: ${C_CONSENT_BACKGROUND};\n  padding: ${GEL_SPACING_DBL} ${GEL_MARGIN_BELOW_400PX};\n\n  @media (min-width: ${GEL_GROUP_2_SCREEN_WIDTH_MIN}) {\n    padding: ${GEL_MARGIN_ABOVE_400PX};\n  }\n`;\n\n/*\n * The '&::after' below is to ensure that the background colour covers the\n * banner as the inner elements are float. The alernative is to have\n * another div inside. This implementation mirrors the current orbit banner.\n */\nconst CenterWrapper = styled.div`\n  max-width: ${GEL_GROUP_5_SCREEN_WIDTH_MIN};\n  margin: 0 auto;\n\n  &::after {\n    content: '\\\\0020';\n    display: block;\n    height: 0;\n    clear: both;\n    overflow: hidden;\n    visibility: hidden;\n  }\n`;\n\nconst Title = styled.h2`\n  ${GEL_GREAT_PRIMER}\n  color: ${C_WHITE};\n  font-weight: 700;\n  padding: 0;\n  margin: 0;\n\n  @media (min-width: ${GEL_GROUP_3_SCREEN_WIDTH_MIN}) {\n    width: 22%;\n    margin-right: 3.5%;\n    float: left;\n  }\n`;\n\n/*\n * The '& li + li' below allows for styling every `li` element except the first.\n */\nconst Options = styled.ul`\n  ${GEL_LONG_PRIMER}\n  color: ${C_CONSENT_ACTION};\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n\n  & li + li {\n    padding-top: ${GEL_SPACING};\n  }\n\n  @media (min-width: ${GEL_GROUP_3_SCREEN_WIDTH_MIN}) {\n    width: 18%;\n    float: right;\n  }\n`;\n\nconst hoverFocusStyles = `\n  &:focus,\n  &:hover {\n    color: ${C_WHITE};\n  }\n`;\n\nexport const ConsentBannerText = styled.p`\n  ${GEL_LONG_PRIMER};\n  color: ${C_CONSENT_CONTENT};\n\n  @media (min-width: ${GEL_GROUP_3_SCREEN_WIDTH_MIN}) {\n    margin: 0;\n    float: left;\n    width: 53%;\n  }\n\n  a {\n    color: ${C_CONSENT_ACTION};\n    text-decoration: none;\n\n    ${hoverFocusStyles}\n  }\n`;\n\n// Style `button` and `a` as children due to inability to set `on`\n// prop on styled component as required for the amp useage\nconst ListItem = styled.li`\n  & button {\n    ${GEL_GREAT_PRIMER}\n    color: ${C_CONSENT_ACTION};\n    font-weight: 700;\n    background: none;\n    border: none;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n\n    ${hoverFocusStyles}\n  }\n\n  & a {\n    color: ${C_CONSENT_ACTION};\n    text-decoration: none;\n\n    ${hoverFocusStyles}\n  }\n`;\n\nexport const ConsentBanner = ({ title, text, accept, reject, id, hidden }) => (\n  <Wrapper id={id} hidden={hidden}>\n    <CenterWrapper>\n      <Title>{title}</Title>\n      {text}\n      <Options>\n        <ListItem>{accept}</ListItem>\n        <ListItem>{reject}</ListItem>\n      </Options>\n    </CenterWrapper>\n  </Wrapper>\n);\n\nConsentBanner.propTypes = {\n  title: string.isRequired,\n  text: element.isRequired,\n  accept: element.isRequired,\n  reject: element.isRequired,\n  id: string,\n  hidden: bool,\n};\n\nConsentBanner.defaultProps = {\n  id: null,\n  hidden: null,\n};\n"],"mappings":"AA0BA","sourceRoot":""}